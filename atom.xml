<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>👨‍💻HappyHacking</title>
  
  <subtitle>A new beginning,a new chapter of my life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lestatmiao.github.io/"/>
  <updated>2018-06-30T15:30:07.000Z</updated>
  <id>https://lestatmiao.github.io/</id>
  
  <author>
    <name>LestatLee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>同一页面巧妙使用多个element-ui的upload组件</title>
    <link href="https://lestatmiao.github.io/2018/06/30/%E5%90%8C%E4%B8%80%E9%A1%B5%E9%9D%A2%E5%B7%A7%E5%A6%99%E4%BD%BF%E7%94%A8%E5%A4%9A%E4%B8%AAelement-ui%E7%9A%84upload%E7%BB%84%E4%BB%B6/"/>
    <id>https://lestatmiao.github.io/2018/06/30/同一页面巧妙使用多个element-ui的upload组件/</id>
    <published>2018-06-30T14:04:25.000Z</published>
    <updated>2018-06-30T15:30:07.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>最近在使用SSR(服务器端渲染)方式引入<code>vue</code>+<code>element-ui</code>开发一个商城项目的时候遇到一个问题:因为商城的订单是可能包含多个商品,所以订单的评价涉及到同一个页面多组表单的异步提交(每一组表单包含评价内容和上传的多张图片)<br>由于<code>element-ui</code>的<code>upload</code>组件默认没有提供多个组件在同一页面绑定不同模型的接口,因此在网上搜了一下,搜到了<a href="https://www.guoxiongfei.cn/cntech/2701.html" target="_blank" rel="noopener">这篇文章</a>,文章中最后的建议是自己封装一个组件来调用<code>upload</code>组件,使用的时候直接调用自己封装的这个组件,但是项目时间紧迫,我这边希望更快的搞定这个问题,于是想到了以下办法  </p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>在<code>upload</code>组件的接口中,有一个<code>data</code>接口,可以绑定需要上传的除文件之外的其他数据对象,由于订单评价页的一个特点:每个商品不论数量大小都只会被评价一次,因此此处直接将当前数组中商品的uuid绑定到data并传递至上传接口,此操作后表单提交的payload就会包含类似如下数据:<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name="uuid"</span><br><span class="line"></span><br><span class="line"><span class="attribute">E7D947BA-79F1-11E8-B786-00163E063020</span></span><br></pre></td></tr></table></figure></p><p>而后台文件上传位置可以做一个判断:如果接收的上传请求包含额外参数,则全部原路返回,因此在上传成功后又会在<code>on-success</code>这个钩子接收到这个唯一的uuid,此处对当前页面商品数组进行遍历并进行比对,在包含返回的<code>uuid</code>对应数组的对应保存组图路径的数组<code>push</code>当前上传成功的图片路径  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.data.goods_list.forEach(<span class="function">(<span class="params">e,k</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.uuid === response.uuid)&#123;</span><br><span class="line">        e.evaluate.thumbs.push(response.url)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>以下是完整代码(html):<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"userEva-cont"</span> <span class="attr">v-for</span>=<span class="string">"(item,key) in data.goods_list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"userEva-table"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"420"</span>&gt;</span>商品<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"280"</span>&gt;</span>型号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"280"</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"evaluate-pic"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"'/product/'+item.goods_id+'.html'"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"'__PHOTO__'+item.thumb"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"evaluate-text"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>&#123;&#123;item.goods_name&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>编号：&#123;&#123;item.uuid&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>型号：&#123;&#123;item.goods_specification_name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.num&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"evaluate-wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dt</span>&gt;</span>评论：<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">"item.evaluate.content"</span> <span class="attr">placeholder</span>=<span class="string">"评论内容"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dt</span>&gt;</span>晒单：<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-upload</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">"upload-demo"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">:action</span>=<span class="string">"basePath"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">:on-preview</span>=<span class="string">"handlePreview"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">:on-remove</span>=<span class="string">"handleRemove"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">drag</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">multiple</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">:data</span>=<span class="string">"item"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">:limit</span>=<span class="string">"5"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">:on-success</span>=<span class="string">"setFileList"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">list-type</span>=<span class="string">"picture"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-upload"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"el-upload__text"</span>&gt;</span>将文件拖到此处，或<span class="tag">&lt;<span class="name">em</span>&gt;</span>点击上传<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"el-upload__tip"</span> <span class="attr">slot</span>=<span class="string">"tip"</span>&gt;</span>只能上传jpg/png文件，且不超过500kb<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"evaluate-btns"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"evaluate-sub"</span> @<span class="attr">click</span>=<span class="string">"submit(item.evaluate,item)"</span>&gt;</span>提交评价<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"evaluate-show"</span> <span class="attr">v-model</span>=<span class="string">"item.evaluate.is_anonymous"</span>&gt;</span>匿名评价<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    * todo:初始化vue</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#container'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        data: __PAGE_DATA__,</span><br><span class="line">        evaluateUrl: <span class="string">'/evaluate.html'</span>,</span><br><span class="line">        imgDialogVisible: <span class="literal">false</span>,</span><br><span class="line">        tempPath: <span class="string">''</span>,</span><br><span class="line">        basePath: <span class="string">''</span></span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        <span class="keyword">this</span>.basePath = Vue.prototype.fileUploadBasePath</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        handleRemove(file, fileList) &#123;</span><br><span class="line">            <span class="keyword">this</span>.data.goods_list.forEach(<span class="function">(<span class="params">e,k</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(e.uuid === file.response.uuid)&#123;</span><br><span class="line">                    <span class="comment">//找到当前url下标</span></span><br><span class="line">                    <span class="keyword">const</span> index = e.evaluate.thumbs.indexOf(file.response.url)</span><br><span class="line">                    <span class="keyword">if</span>(index !== <span class="number">-1</span>)&#123;</span><br><span class="line">                        <span class="comment">//删除</span></span><br><span class="line">                        e.evaluate.thumbs.splice(index,<span class="number">1</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        handlePreview(file) &#123;</span><br><span class="line">            <span class="keyword">this</span>.tempPath = file.response.url</span><br><span class="line">            <span class="keyword">this</span>.imgDialogVisible = <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        setFileList(response, file, fileList)&#123;</span><br><span class="line">            <span class="keyword">this</span>.data.goods_list.forEach(<span class="function">(<span class="params">e,k</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(e.uuid === response.uuid)&#123;</span><br><span class="line">                    e.evaluate.thumbs.push(response.url)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        submit(evaluate,item)&#123;</span><br><span class="line">            evaluate.id = item.goods_id</span><br><span class="line">            evaluate.goods_name = item.goods_name</span><br><span class="line">            evaluate.goods_specification_name = item.goods_specification_name</span><br><span class="line">            evaluate.order_id = <span class="keyword">this</span>.data.goods.o_id</span><br><span class="line">            evaluate = <span class="built_in">Object</span>.assign(&#123;&#125;, evaluate)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.$http.post(<span class="keyword">this</span>.evaluateUrl,&#123;<span class="attr">no</span>:<span class="keyword">this</span>.data.goods.o_orderno,<span class="attr">evaluate</span>:evaluate&#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(response.data.status === <span class="number">200</span>)&#123;</span><br><span class="line">                    <span class="comment">//重新拉取数据</span></span><br><span class="line">                    <span class="keyword">this</span>.$http.get(location.href).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(response.data.status === <span class="number">200</span>)&#123;</span><br><span class="line">                            <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">                                message:<span class="string">'评价成功!'</span>,</span><br><span class="line">                                type:<span class="string">'success'</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                            <span class="comment">//重新拉取数据</span></span><br><span class="line">                            <span class="keyword">this</span>.data = response.data.data</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;).catch(<span class="function"><span class="params">e</span> =&gt;</span> &#123;&#125;)</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">                        message:response.data.message,</span><br><span class="line">                        type:<span class="string">'error'</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).catch(<span class="function"><span class="params">e</span> =&gt;</span> &#123;&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><blockquote><p>至此,经过测试,解决了同一页面多个upload组件上传预览并分别异步提交对应表单到后台的问题</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
      <category term="问题记录" scheme="https://lestatmiao.github.io/categories/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="vue" scheme="https://lestatmiao.github.io/tags/vue/"/>
    
      <category term="element-ui" scheme="https://lestatmiao.github.io/tags/element-ui/"/>
    
  </entry>
  
  <entry>
    <title>vps使用google的bbr脚本加速</title>
    <link href="https://lestatmiao.github.io/2018/06/06/vps%E4%BD%BF%E7%94%A8google%E7%9A%84bbr%E8%84%9A%E6%9C%AC%E5%8A%A0%E9%80%9F/"/>
    <id>https://lestatmiao.github.io/2018/06/06/vps使用google的bbr脚本加速/</id>
    <published>2018-06-06T03:36:38.000Z</published>
    <updated>2018-06-06T04:18:13.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>从去年开始用vultr的vps,先是搭建了ssserver,然后各种web服务,以一个nginx为代理服务器,代理本地不同端口的各种服务,总体来说,vultr家的vps体验很好,除了一点:速度较慢,尤其是晚上8-11点(我买的是东京节点),之前在google上看了很久关于vps加速的方案,基本都是通过锐速,kcptun较多  </p><ol><li>锐速:国产软件,收费,且不开源,不开源,意味着可能被监控,所以直接pass  </li><li>kcptun:个人觉得麻烦,server端配了还要配client<br>最后:当时没发现google的bbr,于是将就用着,也还行,就是偶尔想看看youtube的时候只能看480p的,还卡的厉害…<br>直到前几天,无意中看到google的tcp-bbr拥塞控制技术…<br><a href="https://github.com/google/bbr" target="_blank" rel="noopener">参考链接</a></li></ol><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li>确认VPS的虚拟化技术不为<code>Openvz</code>(vultr的服务器都不是<code>Openvz</code>O(∩_∩)O哈哈~)</li><li>下载脚本<code>wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</code></li><li>查看脚本支持的系统版本(支持内核版本大于4.9的系统),<code>cat ./bbr.sh</code><br>在脚本开始的注释中包含以下信息:<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System Required:  CentOS 6+, Debian7+, Ubuntu12+</span><br></pre></td></tr></table></figure></li></ol><p>我当前的vps是<code>Ubuntu 18.04 LTS</code>,因此满足开启<code>tcp_bbr</code>的条件  </p><ol start="4"><li>赋予执行权限:<code>chmod +x ./bbr.sh</code></li><li>执行:<code>./bbr.sh</code></li><li>完成后使用<code>lsmod | grep tcp_bbr</code>查看<code>tcp_bbr</code>加速模块是否已经安装成功</li><li>重启vps:<code>reboot</code></li></ol><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>直接看YouTube的1080P视频吧,最直观,直接上图<br><img src="https://lestat.b0.upaiyun.com/blog/bbr_speed.jpg" alt=""><br>全程无卡顿  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="google" scheme="https://lestatmiao.github.io/tags/google/"/>
    
      <category term="vps" scheme="https://lestatmiao.github.io/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>gitlab出现forbidden的解决方法</title>
    <link href="https://lestatmiao.github.io/2018/06/06/gitlab%E5%87%BA%E7%8E%B0forbidden%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://lestatmiao.github.io/2018/06/06/gitlab出现forbidden的解决方法/</id>
    <published>2018-06-06T03:22:24.000Z</published>
    <updated>2018-06-06T03:32:35.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>前些天在公司的测试服务器上基于docker安装了gitlab,今天同事突然反映gitlab地址访问的时候页面提示<code>Forbidden</code>,http状态码也是对应的<code>403</code>,于是google一下,发现原因可能是较多的并发导致的访问被拒绝</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><blockquote><p>Gitlab使用rack_attack做了并发访问的限制</p></blockquote><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>配置<code>/etc/gitlab/gitlab.rb</code>文件,服务器当前使用的docker,对应目录是<code>/home/gitlab/config/gitlab.rb</code>(该目录/文件根据docker容器创建时指定的目录/文件映射关系决定)  </p><p>找到下面这段配置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails['rack_attack_git_basic_auth'] = &#123;</span><br><span class="line">  'enabled' =&gt; true,</span><br><span class="line">  'ip_whitelist' =&gt; ["127.0.0.1", "服务器公网ip"],</span><br><span class="line">  'maxretry' =&gt; 10,</span><br><span class="line">  'findtime' =&gt; 60,</span><br><span class="line">  'bantime' =&gt; 3600</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>去掉注释,然后改为<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails['rack_attack_git_basic_auth'] = &#123;</span><br><span class="line">  'enabled' =&gt; true,</span><br><span class="line">  'ip_whitelist' =&gt; ["127.0.0.1", "服务器公网ip"],</span><br><span class="line">  'maxretry' =&gt; 100,</span><br><span class="line">  'findtime' =&gt; 60,</span><br><span class="line">  'bantime' =&gt; 60</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>保存退出  </p><p>运行<code>docker exec 容器名称 gitlab-ctl reconfigure</code><br>至此,上述问题解决  </p><blockquote><p><a href="https://stackoverflow.com/questions/36298959/gitlab-issuing-temporary-ip-bans-403-forbidden" target="_blank" rel="noopener">参考链接:GitLab issuing temporary IP bans - 403 forbidden</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="docker" scheme="https://lestatmiao.github.io/tags/docker/"/>
    
      <category term="gitlab" scheme="https://lestatmiao.github.io/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>docker搭建gitlab和svn服务</title>
    <link href="https://lestatmiao.github.io/2018/05/21/docker%E6%90%AD%E5%BB%BAgitlab%E5%92%8Csvn%E6%9C%8D%E5%8A%A1/"/>
    <id>https://lestatmiao.github.io/2018/05/21/docker搭建gitlab和svn服务/</id>
    <published>2018-05-21T09:15:59.000Z</published>
    <updated>2018-06-04T02:36:06.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>之前公司里的代码都是托管到局域网服务器上的,现在由于部分同事远程办公的需要,计划把git和svn都转到公网的centos服务器上去,但是gitlab的配置是真心费时间,所以决定用docker来做这个事情,以下是一些步骤和总结  </p></blockquote><h3 id="使用daocloud给docker加个速先…"><a href="#使用daocloud给docker加个速先…" class="headerlink" title="使用daocloud给docker加个速先…"></a>使用daocloud给docker加个速先…</h3><p>可以通过这个<a href="http://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="noopener">链接</a>里面的命令给docker改个源,不然速度慢死…</p><h3 id="gitlab安装"><a href="#gitlab安装" class="headerlink" title="gitlab安装"></a>gitlab安装</h3><ol><li><p>拉取镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure></li><li><p>新建授权用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -d /home/gitlab -s /bin/sh -m gitlab</span><br></pre></td></tr></table></figure></li><li><p>后台运行容器,指定域名,端口映射关系,目录映射关系,将容器命名为gitlab,方便后续操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach \</span><br><span class="line">  --hostname git.vcs.trycheers.com \</span><br><span class="line">  --publish 10443:443 --publish 10080:80 --publish 10022:22 \</span><br><span class="line">  --name gitlab \</span><br><span class="line">  --restart always \</span><br><span class="line">  --volume /home/gitlab/config:/etc/gitlab \</span><br><span class="line">  --volume /home/gitlab/logs:/var/<span class="built_in">log</span>/gitlab \</span><br><span class="line">  --volume /home/gitlab/data:/var/opt/gitlab \</span><br><span class="line">  gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure></li><li><p>用apache对<code>10080</code>端口进行反代,使之能够通过域名访问  </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></span><br><span class="line"> <span class="attribute"><span class="nomarkup">ServerName</span></span> hostname</span><br><span class="line"> <span class="attribute">ProxyPreserveHost</span> <span class="literal">On</span> </span><br><span class="line"> <span class="attribute">ProxyPass</span> / http://localhost:10080/</span><br><span class="line"> <span class="attribute">ProxyPassReverse</span> / http://localhost:10080/</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="svn安装"><a href="#svn安装" class="headerlink" title="svn安装"></a>svn安装</h3><ol><li><p>后台运行容器,指定端口映射关系,目录映射关系,将容器命名为svn,方便后续操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9200:80 -p 9201:443 -v /home/subversion/svn:/var/<span class="built_in">local</span>/svn -v /home/subversion/svn_backup:/var/svn-backup -v /home/subversion/svn_conf/:/etc/apache2/dav_svn/ --name svn marvambass/subversion</span><br></pre></td></tr></table></figure></li><li><p>添加svn用户  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htdigest /home/subversion/svn_conf/dav_svn.passwd Subversion username</span><br></pre></td></tr></table></figure></li><li><p>修改仓库/分组/用户权限<br>直接编辑<code>/home/subversion/svn_conf/dav_svn.authz</code></p></li><li><p>用apache对<code>9200</code>端口进行反代,使之能够通过域名访问  </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></span><br><span class="line"> <span class="attribute"><span class="nomarkup">ServerName</span></span> hostname</span><br><span class="line"> <span class="attribute">ProxyPreserveHost</span> <span class="literal">On</span> </span><br><span class="line"> <span class="attribute">ProxyPass</span> / http://localhost:9200/</span><br><span class="line"> <span class="attribute">ProxyPassReverse</span> / http://localhost:9200/</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="关于gitlab的系统资源占用"><a href="#关于gitlab的系统资源占用" class="headerlink" title="关于gitlab的系统资源占用"></a>关于gitlab的系统资源占用</h3><p>看图说话<br><img src="https://lestat.b0.upaiyun.com/blog/gitlab-stats.png" alt=""><br>在docker中常驻内存大概是2GB+,cpu开销通常只是在启动时候特别大,因此要运行<code>gitlab</code>推荐<strong>至少</strong>使用2核4GB的服务器配置!</p><blockquote><p>哎,也难怪当时折腾半天也没能在我家树莓派(arm架构的4核cpu,512M内存…)上搞定<code>gitlab</code>…</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>gitlab在刚启动时会加载大量的环境依赖,因此可能出现cpu占用高的情况,根据服务器性能不同会持续一段时间,通常在cpu占用降至正常时才能访问到本地的gitlab项目  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="docker" scheme="https://lestatmiao.github.io/tags/docker/"/>
    
      <category term="gitlab" scheme="https://lestatmiao.github.io/tags/gitlab/"/>
    
      <category term="svn" scheme="https://lestatmiao.github.io/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>树莓派玩耍记</title>
    <link href="https://lestatmiao.github.io/2018/04/14/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%8E%A9%E8%80%8D%E8%AE%B0/"/>
    <id>https://lestatmiao.github.io/2018/04/14/树莓派玩耍记/</id>
    <published>2018-04-14T13:52:41.000Z</published>
    <updated>2018-04-15T03:29:22.813Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>这篇文章是自己入手树莓派之后的一些使用记录<br>前些天看 v2ex 上有人讨论树莓派，于是出于好奇在淘宝上淘了一只树莓派来玩玩</p></blockquote><p>体积超级小…<br><img src="https://lestat.b0.upaiyun.com/blog/20180414/211523716251_.pic_hd.jpg" alt=""></p><p>一个板子,一个塑料盒子装上完工<br><img src="https://lestat.b0.upaiyun.com/blog/20180414/201523716248_.pic_hd.jpg" alt=""></p><p>刚开始的时候尝试了一下官方的<a href="https://www.raspberrypi.org/downloads/noobs/" target="_blank" rel="noopener">NOOBS</a>工具安装<a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noopener">raspbian</a>系统,这个系统是为树莓派定制的基于<a href="https://zh.wikipedia.org/wiki/Debian" target="_blank" rel="noopener">Debian</a>的 linux 系统,但不知什么原因总是间歇性卡死,加之个人偏好 ubuntu 一点,于是安装了<a href="https://zh.wikipedia.org/wiki/Ubuntu_MATE" target="_blank" rel="noopener">Ubuntu_MATE</a></p><h3 id="系统安装基本步骤"><a href="#系统安装基本步骤" class="headerlink" title="系统安装基本步骤:"></a>系统安装基本步骤:</h3><ol><li>下载<a href="https://ubuntu-mate.org/download/" target="_blank" rel="noopener">系统镜像</a></li><li>将下载的<code>ubuntu-mate-16.04.2-desktop-armhf-raspberry-pi.img</code>镜像解压后使用<code>dd</code>命令将镜像写入到 sd 卡中(我的环境为 macOS),注意写入完成后一定要使用<code>unmount</code>将 sd 卡推出,然后拔出 sd 卡</li><li>将 sd 卡插入树莓派,并连接好所有外设后开机,然后像安装 QQ 一样完成了<a href="https://zh.wikipedia.org/wiki/Ubuntu_MATE" target="_blank" rel="noopener">Ubuntu_MATE</a>的安装过程</li></ol><h3 id="简易播报系统"><a href="#简易播报系统" class="headerlink" title="简易播报系统:"></a>简易播报系统:</h3><blockquote><p>当时冒出一个想法:写一个每天定时播放未来两天天气预报的小程序(非彼小程序),涉及的功能点:天气预报接口;一个基于轻量级的 api 框架实现的 api;一个定时任务;一个文字转语音脚本;一个音频文件播放器;当然还需要一个外接小音箱…</p></blockquote><p>于是安装了 lnmp 环境(当下没有用到 mysql),mplayer,git,文字转音频使用的百度<a href="http://bos.nj.bpc.baidu.com/v1/audio/aip-speech-php-sdk-1.6.0.zip" target="_blank" rel="noopener">sdk(php)</a>,通过 git 安装了<a href="https://lumen.laravel.com/" target="_blank" rel="noopener">lumen</a></p><h4 id="接口开发"><a href="#接口开发" class="headerlink" title="接口开发"></a>接口开发</h4><ol><li>路由</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$router-&gt;get(<span class="string">'/get_weather'</span>,<span class="string">'WeatherController@getWeather'</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>控制器<code>WeatherController.php</code></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Client</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Cache</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new controller instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//基于树莓派的简易天气预报系统</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getWeather</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//获取天气信息</span></span><br><span class="line">        $client = <span class="keyword">new</span> Client();  <span class="comment">// 实例化</span></span><br><span class="line">        $city = <span class="string">'成都'</span>;</span><br><span class="line">        $city_code = urlencode($city);</span><br><span class="line">        $aqi = [</span><br><span class="line">            <span class="string">'好'</span>,</span><br><span class="line">            <span class="string">'中等'</span>,</span><br><span class="line">            <span class="string">'不适于敏感人群'</span>,</span><br><span class="line">            <span class="string">'不健康'</span>,</span><br><span class="line">            <span class="string">'非常不健康'</span>,</span><br><span class="line">            <span class="string">'危险'</span>,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Cache::has(<span class="string">'report'</span>) === <span class="keyword">false</span>) &#123;</span><br><span class="line">            $url = <span class="string">'https://www.sojson.com/open/api/weather/json.shtml?city='</span> . $city_code;    <span class="comment">// 设置一个可访问的 url</span></span><br><span class="line">            $http = $client-&gt;request(<span class="string">'GET'</span>, $url);  <span class="comment">// 执行</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断 http 状态码为 200 的时候，执行成功</span></span><br><span class="line">            $aqi_content = <span class="string">'未知'</span>;</span><br><span class="line">            <span class="keyword">if</span> ($http-&gt;getStatusCode() == <span class="number">200</span>) &#123;</span><br><span class="line">                $weather = json_decode($http-&gt;getBody()-&gt;getContents(), <span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">if</span> ($weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">0</span>][<span class="string">'aqi'</span>] &lt;= <span class="number">50</span>) &#123;</span><br><span class="line">                    $aqi_content = $aqi[<span class="number">0</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">0</span>][<span class="string">'aqi'</span>] &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">                    $aqi_content = $aqi[<span class="number">1</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">0</span>][<span class="string">'aqi'</span>] &lt;= <span class="number">150</span>) &#123;</span><br><span class="line">                    $aqi_content = $aqi[<span class="number">2</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">0</span>][<span class="string">'aqi'</span>] &lt;= <span class="number">200</span>) &#123;</span><br><span class="line">                    $aqi_content = $aqi[<span class="number">3</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">0</span>][<span class="string">'aqi'</span>] &lt;= <span class="number">300</span>) &#123;</span><br><span class="line">                    $aqi_content = $aqi[<span class="number">4</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">0</span>][<span class="string">'aqi'</span>] &lt;= <span class="number">500</span>) &#123;</span><br><span class="line">                    $aqi_content = $aqi[<span class="number">5</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//拼装字符串</span></span><br><span class="line">                $report = <span class="string">'现在预报,'</span> . $city . <span class="string">'未来两天天气情况,'</span> . $city . <span class="string">','</span> . date(<span class="string">'Y年m月'</span>, time()) . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">1</span>][<span class="string">'date'</span>] . <span class="string">',天气情况,'</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">1</span>][<span class="string">'high'</span>] . <span class="string">','</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">1</span>][<span class="string">'low'</span>] . <span class="string">','</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">1</span>][<span class="string">'type'</span>] . <span class="string">','</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">1</span>][<span class="string">'fx'</span>] . <span class="string">',风力,'</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">1</span>][<span class="string">'fl'</span>] . <span class="string">',日出时间,'</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">1</span>][<span class="string">'sunrise'</span>] . <span class="string">',日落时间,'</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">1</span>][<span class="string">'sunset'</span>] . <span class="string">',空气污染指数,'</span> . $aqi_content;</span><br><span class="line">                $report .= <span class="string">','</span> . $city . <span class="string">','</span> . date(<span class="string">'Y年m月'</span>, time()) . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">2</span>][<span class="string">'date'</span>] . <span class="string">',天气情况,'</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">2</span>][<span class="string">'high'</span>] . <span class="string">','</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">2</span>][<span class="string">'low'</span>] . <span class="string">','</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">2</span>][<span class="string">'type'</span>] . <span class="string">','</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">2</span>][<span class="string">'fx'</span>] . <span class="string">',风力,'</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">2</span>][<span class="string">'fl'</span>] . <span class="string">',日出时间,'</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">2</span>][<span class="string">'sunrise'</span>] . <span class="string">',日落时间,'</span> . $weather[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">2</span>][<span class="string">'sunset'</span>] . <span class="string">',空气污染指数,'</span> . $aqi_content;</span><br><span class="line">                Cache::add(<span class="string">'report'</span>, $report, <span class="number">60</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $report = Cache::get(<span class="string">'report'</span>);</span><br><span class="line">        generate_audio($report);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上的<code>generate_audio()</code>即是自行封装后的百度的文字转语音sdk</p><h4 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h4><ol><li>创建一个目录<code>/data/weather_reports/</code>用于保存mp3临时文件</li><li><code>crontab -e</code>添加定时任务<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 19 * * * curl http://localhost/get_weather &amp;&amp; /usr/bin/mplayer /data/weather_reports/weather_forecast.mp3 &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li></ol><p>以上是每天19点30分使用<code>curl</code>命令请求本地的api并使用<code>mplayer</code>打开位于<code>/data/weather_reports/</code>目录的<code>weather_forecast.mp3</code>文件,并将标准输出&amp;错误输出重定向到空文件中</p><h3 id="简易播报系统完成"><a href="#简易播报系统完成" class="headerlink" title="简易播报系统完成"></a>简易播报系统完成</h3><p>至此,一个定时播报小程序已完成,同时还可以利用<a href="https://lestatmiao.github.io/2018/03/26/frp+nginx%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/">内网穿透</a>开放公网对该树莓派的ssh访问,实现远程遥控播放😋<br>为了进一步方便操作(因为除了第一次安装系统,其他时候都希望直接通过命令行操作树莓派而不是外接一个显示器,资源有限…),将frp客户端的连接命令加入了开机启动  </p><h3 id="开机启动步骤"><a href="#开机启动步骤" class="headerlink" title="开机启动步骤"></a>开机启动步骤</h3><ol><li><p>在<code>frp</code>客户端所在目录新建sh文件<code>frp_start.sh</code>文件,并赋予执行权限</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch <span class="string">./frp_start.sh</span></span><br><span class="line">chmod +x <span class="string">./frp_start.sh</span></span><br></pre></td></tr></table></figure></li><li><p>写入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## BEGIN INIT INFO</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Provides:          lestat</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Required-Start:    <span class="variable">$local_fs</span> <span class="variable">$network</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Required-Stop:     <span class="variable">$local_fs</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default-Stop:      0 1 6</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Short-Description: start frp service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Description:       start frp service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## END INIT INFO</span></span></span><br><span class="line">cd frp客户端所在目录</span><br><span class="line">nohup ./frpc -c ./frpc.ini &amp;</span><br></pre></td></tr></table></figure></li><li><p>将文件连接到<code>/etc/init.d/</code>目录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s frp客户端所在目录<span class="regexp">/frp_start.sh /</span>etc<span class="regexp">/init.d/</span>frp_start</span><br></pre></td></tr></table></figure></li><li><p>在<code>/etc/init.d/</code>使用<code>update-rc.d</code>命令进行配置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">update</span>-rc.d frp_start <span class="keyword">defaults</span> <span class="number">99</span></span><br></pre></td></tr></table></figure></li><li><p>配置成功后可以在<code>/etc/rc[对应的系统运行级别].d/</code>目录中看到<code>frp_start</code></p></li></ol><blockquote><p><strong>未完待续…</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="树莓派" scheme="https://lestatmiao.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>关于mysql查询语句的一次问题记录</title>
    <link href="https://lestatmiao.github.io/2018/04/03/%E5%85%B3%E4%BA%8Emysql%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E7%9A%84%E4%B8%80%E6%AC%A1%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://lestatmiao.github.io/2018/04/03/关于mysql查询语句的一次问题记录/</id>
    <published>2018-04-03T06:19:09.000Z</published>
    <updated>2018-04-04T00:55:38.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>最近在开发一个公司内部使用的财务报表系统,在一次查询时数据库报了一个错误,在网上查看原因并解决问题之后顺便记录一下,该sql的目标是从日报主表,日报月数据表,日报模块表中查询到指定经营公司,指定日期的当日汇总数据(包含部分当月数据用于后续计算)</p><p>问题sql如下:  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">A1.depcode <span class="keyword">AS</span> depcode,</span><br><span class="line"><span class="keyword">SUM</span>(d_dd_xcddsntq) <span class="keyword">AS</span> sntq,</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SUM</span>(d_jk_scddldl) + <span class="keyword">SUM</span>(d_jk_zcddldl) + <span class="keyword">SUM</span>(d_jk_hdjkl)</span><br><span class="line">) <span class="keyword">AS</span> bysj</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">mall_daily A</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_jk B <span class="keyword">ON</span> A.id = B.d_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_month C <span class="keyword">ON</span> A.depcode = C.depcode</span><br><span class="line"><span class="keyword">AND</span> A.d_datetime &gt;= C. <span class="keyword">START</span></span><br><span class="line"><span class="keyword">AND</span> A.d_datetime &lt;= C.</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">A.d_date &gt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-01'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> A.d_date &lt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-21'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> A.depcode = A1.depcode</span><br><span class="line">) <span class="keyword">AS</span> aj13,</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">SUM</span>(B.d_dd_xcztdd) <span class="keyword">AS</span> bysj</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">mall_daily A</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_dd B <span class="keyword">ON</span> A.id = B.d_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_month C <span class="keyword">ON</span> A.depcode = C.depcode</span><br><span class="line"><span class="keyword">AND</span> A.d_datetime &gt;= C. <span class="keyword">START</span></span><br><span class="line"><span class="keyword">AND</span> A.d_datetime &lt;= C.</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">A.d_date &gt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-01'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> A.d_date &lt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-21'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> C.table_name = <span class="string">'DailyDd'</span></span><br><span class="line"><span class="keyword">AND</span> A.depcode = A1.depcode</span><br><span class="line">) <span class="keyword">AS</span> aj25,</span><br><span class="line"><span class="keyword">TRUNCATE</span> (</span><br><span class="line">(<span class="keyword">SELECT</span> aj25) / (<span class="keyword">SELECT</span> aj13),</span><br><span class="line"><span class="number">2</span></span><br><span class="line">) <span class="keyword">AS</span> bysj,</span><br><span class="line">D.d_month_byjh <span class="keyword">AS</span> byjh,</span><br><span class="line"><span class="keyword">TRUNCATE</span> (</span><br><span class="line">(<span class="keyword">SELECT</span> bysj) / (<span class="keyword">SELECT</span> byjh),</span><br><span class="line"><span class="number">2</span></span><br><span class="line">) <span class="keyword">AS</span> jhdcl,</span><br><span class="line"><span class="keyword">TRUNCATE</span> (<span class="number">30</span> / <span class="number">31</span>, <span class="number">2</span>) <span class="keyword">AS</span> sjjd,</span><br><span class="line"><span class="keyword">TRUNCATE</span> (</span><br><span class="line">(<span class="keyword">SELECT</span> bysj) / (<span class="keyword">SELECT</span> sntq),</span><br><span class="line"><span class="number">2</span></span><br><span class="line">) <span class="keyword">AS</span> tb</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">mall_daily A1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_dd B <span class="keyword">ON</span> A1.id = B.d_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_jk C <span class="keyword">ON</span> A1.id = C.d_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_month D <span class="keyword">ON</span> A1.depcode = D.depcode</span><br><span class="line"><span class="keyword">AND</span> A1.d_datetime &gt;= D. <span class="keyword">START</span></span><br><span class="line"><span class="keyword">AND</span> A1.d_datetime &lt;= D.</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">A1.d_date &gt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-01'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> A1.d_date &lt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-21'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">A1.depcode;</span><br></pre></td></tr></table></figure><p>上述sql在执行时提示<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Err] <span class="number">1247</span> - <span class="keyword">Reference</span> <span class="string">'sntq'</span> <span class="keyword">not</span> supported (<span class="keyword">reference</span> <span class="keyword">to</span> <span class="keyword">group</span> <span class="function"><span class="keyword">function</span>)</span></span><br></pre></td></tr></table></figure></p><p>大意是不支持’sntq’的引用,但是上面<code>SELECT</code>的字段中明明有这个<code>alias</code>。后来临时通过在这个位置用表达式替换了别名解决(将<code>SELECT sntq</code>替换为<code>SUM(d_dd_xcddsntq)</code>),但始终觉得不完美,最后google以下找到了更好的解决方式,就是在这个查询语句外层再套一层查询语句,也就是将当前查询语句作为另一个语句的子查询,修改后结构如下: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">depcode,</span><br><span class="line">sntq,</span><br><span class="line">bysj,</span><br><span class="line">byjh,</span><br><span class="line">jhdcl,</span><br><span class="line">sjjd,</span><br><span class="line"><span class="keyword">TRUNCATE</span> (bysj / sntq, <span class="number">2</span>) <span class="keyword">AS</span> tb</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">A1.depcode <span class="keyword">AS</span> depcode,</span><br><span class="line"><span class="keyword">SUM</span>(d_dd_xcddsntq) <span class="keyword">AS</span> sntq,</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SUM</span>(d_jk_scddldl) + <span class="keyword">SUM</span>(d_jk_zcddldl) + <span class="keyword">SUM</span>(d_jk_hdjkl)</span><br><span class="line">) <span class="keyword">AS</span> bysj</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">mall_daily A</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_jk B <span class="keyword">ON</span> A.id = B.d_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_month C <span class="keyword">ON</span> A.depcode = C.depcode</span><br><span class="line"><span class="keyword">AND</span> A.d_datetime &gt;= C. <span class="keyword">START</span></span><br><span class="line"><span class="keyword">AND</span> A.d_datetime &lt;= C.</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">A.d_date &gt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-01'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> A.d_date &lt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-21'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> A.depcode = A1.depcode</span><br><span class="line">) <span class="keyword">AS</span> aj13,</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">SUM</span>(B.d_dd_xcztdd) <span class="keyword">AS</span> bysj</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">mall_daily A</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_dd B <span class="keyword">ON</span> A.id = B.d_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_month C <span class="keyword">ON</span> A.depcode = C.depcode</span><br><span class="line"><span class="keyword">AND</span> A.d_datetime &gt;= C. <span class="keyword">START</span></span><br><span class="line"><span class="keyword">AND</span> A.d_datetime &lt;= C.</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">A.d_date &gt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-01'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> A.d_date &lt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-21'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> C.table_name = <span class="string">'DailyDd'</span></span><br><span class="line"><span class="keyword">AND</span> A.depcode = A1.depcode</span><br><span class="line">) <span class="keyword">AS</span> aj25,</span><br><span class="line"><span class="keyword">TRUNCATE</span> (</span><br><span class="line">(<span class="keyword">SELECT</span> aj25) / (<span class="keyword">SELECT</span> aj13),</span><br><span class="line"><span class="number">2</span></span><br><span class="line">) <span class="keyword">AS</span> bysj,</span><br><span class="line">D.d_month_byjh <span class="keyword">AS</span> byjh,</span><br><span class="line"><span class="keyword">TRUNCATE</span> (</span><br><span class="line">(<span class="keyword">SELECT</span> bysj) / (<span class="keyword">SELECT</span> byjh),</span><br><span class="line"><span class="number">2</span></span><br><span class="line">) <span class="keyword">AS</span> jhdcl,</span><br><span class="line"><span class="keyword">TRUNCATE</span> (<span class="number">30</span> / <span class="number">31</span>, <span class="number">2</span>) <span class="keyword">AS</span> sjjd</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">mall_daily A1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_dd B <span class="keyword">ON</span> A1.id = B.d_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_jk C <span class="keyword">ON</span> A1.id = C.d_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> mall_daily_month D <span class="keyword">ON</span> A1.depcode = D.depcode</span><br><span class="line"><span class="keyword">AND</span> A1.d_datetime &gt;= D. <span class="keyword">START</span></span><br><span class="line"><span class="keyword">AND</span> A1.d_datetime &lt;= D.</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">A1.d_date &gt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-01'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">AND</span> A1.d_date &lt;= <span class="keyword">DATE_FORMAT</span>(<span class="string">'2018-03-21'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">A1.depcode</span><br><span class="line">) t;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://stackoverflow.com/questions/7072479/reusing-alias-in-select" target="_blank" rel="noopener">参考链接</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="mysql" scheme="https://lestatmiao.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>frp+nginx实现内网穿透</title>
    <link href="https://lestatmiao.github.io/2018/03/26/frp+nginx%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>https://lestatmiao.github.io/2018/03/26/frp+nginx实现内网穿透/</id>
    <published>2018-03-26T12:58:23.000Z</published>
    <updated>2018-04-02T12:57:17.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>写在前面:上一篇文章写了关于ngrok+nginx实现内网穿透的流程,并提出了一些存在的问题,昨天试过frp之后,将之前ngrok存在的无法映射本地域名的问题解决了  </p></blockquote><p><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">frp</a> 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。  </p><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><p>有一个域名,并解析到自己服务器上,如:*.frp.lestat.me<br>有一个具备固定ip的公网服务器  </p><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><p>假设环境为:<br>服务器OS:ubuntu17.10<br>客户端OS:macOS High Sierra<br>以下内容将按照上述环境进行搭建  </p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>相对于ngrok还需要编译源码,<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">frp</a>方便很多,真正的开箱即用</p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><ol><li>下载对应操作系统的frp服务端&amp;客户端至服务器和内网电脑</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget</span><br><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/fatedier/</span>frp<span class="regexp">/releases/</span>download<span class="regexp">/v0.16.1/</span>frp_0.<span class="number">16.1</span>_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><ol start="2"><li>解压</li></ol><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar zxf ./frp_0<span class="number">.16</span><span class="number">.1</span>_linux_amd64.tar.gz</span><br><span class="line">cd ./frp_0<span class="number">.16</span><span class="number">.1</span>_linux_amd64</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><ol start="3"><li>目录结构如下(不同版本可能有差异,但大致相似):</li></ol><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-rw-rw-r-- <span class="number"> 1 </span>kcptun kcptun  <span class="number"> 11358 </span>Mar<span class="number"> 21 </span>10:11 LICENSE</span><br><span class="line">-rwxrwxr-x <span class="number"> 1 </span>kcptun kcptun<span class="number"> 6154432 </span>Mar<span class="number"> 21 </span>10:10 frpc*</span><br><span class="line">-rw-rw-r-- <span class="number"> 1 </span>kcptun kcptun    <span class="number"> 126 </span>Mar<span class="number"> 21 </span>10:11 frpc.ini</span><br><span class="line">-rw-rw-r-- <span class="number"> 1 </span>kcptun kcptun   <span class="number"> 5306 </span>Mar<span class="number"> 21 </span>10:11 frpc_full.ini</span><br><span class="line">-rwxrwxr-x <span class="number"> 1 </span>kcptun kcptun<span class="number"> 7586848 </span>Mar<span class="number"> 21 </span>10:10 frps*</span><br><span class="line">-r--r----- <span class="number"> 1 </span>root   root    <span class="number"> 11207 </span>Mar<span class="number"> 25 </span>15:38 frps.2018-03-25.log</span><br><span class="line">-rw-rw-r-- <span class="number"> 1 </span>kcptun kcptun   <span class="number"> 2127 </span>Mar<span class="number"> 25 </span>13:42 frps.ini</span><br><span class="line">-rw-rw---- <span class="number"> 1 </span>root   root      <span class="number"> 723 </span>Mar<span class="number"> 26 </span>05:06 frps.log</span><br><span class="line">-rw-rw-r-- <span class="number"> 1 </span>kcptun kcptun   <span class="number"> 2300 </span>Mar<span class="number"> 21 </span>10:11 frps_full.ini</span><br><span class="line">-rw------- <span class="number"> 1 </span>root   root        <span class="number"> 0 </span>Mar<span class="number"> 25 </span>11:12 nohup.out</span><br></pre></td></tr></table></figure><ol start="4"><li>编辑配置文件  </li></ol><p><code>vim ./frps.ini</code></p><ol start="5"><li>可参考如下配置: </li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务器端监听客户端连接请求的端口</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器端监听http请求的端口(由于80端口被nginx占用,因此指定其他端口)</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器用以显示连接状态的站点端口,以下配置中可以通过访问IP:7500登录查看frp服务端状态等信息</span></span><br><span class="line"><span class="attr">dashboard_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dashboard对应的用户名/密码</span></span><br><span class="line"><span class="attr">dashboard_user</span> = user</span><br><span class="line"><span class="attr">dashboard_pwd</span> = pwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件路径</span></span><br><span class="line"><span class="attr">log_file</span> = ./frps.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志记录错误级别,分为:trace, debug, info, warn, error</span></span><br><span class="line"><span class="attr">log_level</span> = warn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志保存最大天数</span></span><br><span class="line"><span class="attr">log_max_days</span> = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端连接校验码(客户端需与之相同)</span></span><br><span class="line"><span class="attr">privilege_token</span> = privilege_token</span><br><span class="line"></span><br><span class="line"><span class="comment"># heartbeat configure, it's not recommended to modify the default value</span></span><br><span class="line"><span class="comment"># the default value of heartbeat_timeout is 90</span></span><br><span class="line"><span class="comment"># heartbeat_timeout = 90</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># only allow frpc to bind ports you list, if you set nothing, there won't be any limit</span></span><br><span class="line"><span class="comment"># privilege_allow_ports = 2000-3000,3001,3003,4000-50000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pool_count in each proxy will change to max_pool_count if they exceed the maximum value</span></span><br><span class="line"><span class="attr">max_pool_count</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># max ports can be used for each client, default value is 0 means no limit</span></span><br><span class="line"><span class="attr">max_ports_per_client</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># authentication_timeout means the timeout interval (seconds) when the frpc connects frps</span></span><br><span class="line"><span class="comment"># if authentication_timeout is zero, the time is not verified, default is 900s</span></span><br><span class="line"><span class="attr">authentication_timeout</span> = <span class="number">900</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 支持外部访问的域名(需要将域名解析到IP)</span></span><br><span class="line"><span class="attr">subdomain_host</span> = frps.lestat.me</span><br></pre></td></tr></table></figure><ol start="6"><li>配置nginx反向代理,将来自80端口并指向*.frp.lestat.me的请求分发至frp服务器http请求的监听端口</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> <span class="regexp">*.frps.lestat.me</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span>  http://127.0.0.1:8080;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-NginX-Proxy <span class="literal">true</span>;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">"upgrade"</span>;</span><br><span class="line">        <span class="attribute">proxy_max_temp_file_size</span> <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">240s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>启动frp服务器并后台运行,启动完成后可通过<code>lsof -i :7000</code>查看端口占用情况</li></ol><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup <span class="string">./frps</span> -c <span class="string">./frps.ini</span> &amp;</span><br></pre></td></tr></table></figure><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><ol><li><p>创建目录并解压</p></li><li><p>编辑配置文件</p></li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = 服务器IP</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">privilege_token</span> = privilege_token</span><br><span class="line"><span class="attr">auth_token</span> = auth_token</span><br><span class="line"><span class="section">[hccrm]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">subdomain</span> = hccrm</span><br></pre></td></tr></table></figure><ol start="3"><li>启动frp客户端程序</li></ol><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./frpc</span> -c <span class="string">./frpc.ini</span></span><br></pre></td></tr></table></figure><ol start="4"><li>本地apache/nginx虚拟主机配置域名别名(alias),根据自己环境而定</li></ol><p><img src="https://lestat.b0.upaiyun.com/blog/apache-alias.png" alt="mamp集成apache配置"></p><h2 id="流程图解"><a href="#流程图解" class="headerlink" title="流程图解"></a>流程图解</h2><h3 id="假设甲使用的浏览器希望访问乙所在内网环境服务器的web项目"><a href="#假设甲使用的浏览器希望访问乙所在内网环境服务器的web项目" class="headerlink" title="假设甲使用的浏览器希望访问乙所在内网环境服务器的web项目:"></a>假设甲使用的浏览器希望访问乙所在内网环境服务器的web项目:</h3><p><img src="https://lestat.b0.upaiyun.com/blog/frp+nginx.png" alt=""></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>尝试使用*.frps.lestat.me访问站点看是否正常,相比ngrok的流程,frp省去了编译,少踩不少坑,的确省事多了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://lestatmiao.github.io/tags/nginx/"/>
    
      <category term="frp" scheme="https://lestatmiao.github.io/tags/frp/"/>
    
  </entry>
  
  <entry>
    <title>ngrok+nginx实现内网穿透</title>
    <link href="https://lestatmiao.github.io/2018/03/24/ngrok+nginx%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>https://lestatmiao.github.io/2018/03/24/ngrok+nginx实现内网穿透/</id>
    <published>2018-03-24T04:05:51.000Z</published>
    <updated>2018-03-26T14:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>写在前面:<br>前天在qq群里看到有人在讨论替代花生壳的工具，说到了ngrok，说是可以实现花生壳一样的内网穿透，个人认为主要有以下几个用处:</p><ol><li>可以在公司测试服务器上搭建一个服务,实现测试站点的本地访问(公网访问本地服务器)，在这之前通常是上传网站到服务器并解析一个子域名，相对比较费时  </li><li>微信接口开发的时候优势更明显，因为微信的OAuth一类认证需要一个公网域名且端口必须是80/443(也是本文需要用到nginx做反向代理的原因之一)  </li><li>欢迎补充…  </li></ol></blockquote><h2 id="ngrok1-x介绍-2-x没有开源官网"><a href="#ngrok1-x介绍-2-x没有开源官网" class="headerlink" title="ngrok1.x介绍(2.x没有开源官网)"></a>ngrok1.x介绍(2.x没有开源<a href="https://ngrok.com/" target="_blank" rel="noopener">官网</a>)</h2><p><img src="https://lestat.b0.upaiyun.com/blog/ngrok-intro.png" alt=""><br><a href="https://github.com/inconshreveable/ngrok" target="_blank" rel="noopener">ngrok1.x源码github地址</a><br>如上封面图所示</p><p>橘色屏幕的笔记本是你的工作机器，安装了ngrok客户端<br>ngrok.com所在的服务器安装了ngrok的服务端（ngrokd）<br>利用ngrok 8080命令可以将你本机的8080端口暴露给反向代理至ngrok.com的某个二级域名如：<em>.ngrok.com<br>公网用户可以通过</em>.ngrok.com就可以访问你本机8080端口上的站点内容了。<br>由此可见，借助ngrok，可以解决web项目(尤其是微信接口相关)开发过程经常遇到的“本地开发，外网调试”问题。  </p><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><ol><li>有一个域名,并解析到自己服务器上,如:<code>*.ngrok.lestat.me</code></li><li>有一个具备固定ip的公网服务器</li></ol><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><blockquote><p>基本步骤:安装go环境-&gt;下载ngrok源码-&gt;使用go编译ngrok以及相关环境变量的设置-&gt;证书配置-&gt;运行ngrok服务器端并指定监听的http/https端口-&gt;nginx配置文件中对上一步中相关端口做反向代理配置-&gt;重启nginx-&gt;生成对应OS(linux,darwin,windows)的客户端-&gt;本地机器下载上一步生成的客户端-&gt;本地新建配置文件ngrok.cfg-&gt;本地运行客户端并指定配置文件-&gt;出现<code>online</code>则说明穿透成功</p></blockquote><h3 id="一个例子"><a href="#一个例子" class="headerlink" title="一个例子"></a>一个例子</h3><h4 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h4><p>本机地址 IP：127.0.0.1，HTTP 为 80<br>外网地址 IP：45.77.14.6，HTTP 为 80(NGINX监听该端口,并对<em>.ngrok.lestat.me域名进行转发到服务器的60端口)<br>域名为：http://</em>.ngrok.lestat.me</p><h4 id="预期结果"><a href="#预期结果" class="headerlink" title="预期结果"></a>预期结果</h4><p>外网访问 http://*.ngrok.lestat.me可以访问到本机上80端口提供的网站<br>下文按照前面的例子来搭建</p><h3 id="Go环境的安装"><a href="#Go环境的安装" class="headerlink" title="Go环境的安装"></a>Go环境的安装</h3><ol><li><p>下载并解压GOLANG</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -c https:<span class="comment">//storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz</span></span><br><span class="line">tar -C /usr/local -zxvf go1.<span class="number">8.3</span><span class="selector-class">.linux-amd64</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure></li><li><p>设置相关环境变量</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">GOROOT</span>=/usr/local/go</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$GOROOT/bin</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">GOPATH</span>=<span class="variable">$HOME</span>/go</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">GOROOT_BOOTSTRAP</span>=/usr/local/go</span><br></pre></td></tr></table></figure></li><li><p>检查安装是否成功<br><code>go version</code></p></li></ol><h3 id="安装ngrok"><a href="#安装ngrok" class="headerlink" title="安装ngrok"></a>安装ngrok</h3><ol><li><p>下载并配置参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/inconshreveable/ngrok.git</span><br><span class="line"><span class="built_in">export</span> GOPATH=/usr/<span class="built_in">local</span>/ngrok/</span><br><span class="line"><span class="built_in">export</span> NGROK_DOMAIN=<span class="string">"ngrok.lestat.me"</span></span><br><span class="line"><span class="built_in">cd</span> ngrok</span><br></pre></td></tr></table></figure></li><li><p>生成证书  </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out rootCA<span class="selector-class">.key</span> <span class="number">2048</span></span><br><span class="line">openssl req -x509 -new -nodes -key rootCA<span class="selector-class">.key</span> -subj <span class="string">"/CN=$NGROK_DOMAIN"</span> -days <span class="number">5000</span> -out rootCA.pem</span><br><span class="line">openssl genrsa -out server<span class="selector-class">.key</span> <span class="number">2048</span></span><br><span class="line">openssl req -new -key server<span class="selector-class">.key</span> -subj <span class="string">"/CN=$NGROK_DOMAIN"</span> -out server.csr</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> server<span class="selector-class">.csr</span> -CA rootCA<span class="selector-class">.pem</span> -CAkey rootCA<span class="selector-class">.key</span> -CAcreateserial -out server<span class="selector-class">.crt</span> -days <span class="number">5000</span></span><br></pre></td></tr></table></figure></li><li><p>将源码下的证书复制到指定位置  </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp rootCA<span class="selector-class">.pem</span> assets/client/tls/ngrokroot.crt</span><br><span class="line">cp server<span class="selector-class">.crt</span> assets/server/tls/snakeoil.crt</span><br><span class="line">cp server<span class="selector-class">.key</span> assets/server/tls/snakeoil.key</span><br></pre></td></tr></table></figure></li><li><p>编译服务器&amp;客户端(linux64位),如果是32位系统则是<code>amd386</code>  </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/go/src</span><br><span class="line"><span class="attribute">GOOS</span>=linux <span class="attribute">GOARCH</span>=amd64 ./make.bash</span><br><span class="line">cd /usr/local/ngrok/</span><br><span class="line"><span class="attribute">GOOS</span>=linux <span class="attribute">GOARCH</span>=amd64 make release-server release-client</span><br></pre></td></tr></table></figure></li></ol><p>编译Mac64位客户端<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/go/src</span><br><span class="line"><span class="attribute">GOOS</span>=darwin <span class="attribute">GOARCH</span>=amd64 ./make.bash</span><br><span class="line">cd /usr/local/ngrok/</span><br><span class="line"><span class="attribute">GOOS</span>=darwin <span class="attribute">GOARCH</span>=amd64 make release-client</span><br></pre></td></tr></table></figure></p><p>编译Windows64位客户端<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/go/src</span><br><span class="line"><span class="attribute">GOOS</span>=windows <span class="attribute">GOARCH</span>=amd64 ./make.bash</span><br><span class="line">cd /usr/local/ngrok/</span><br><span class="line"><span class="attribute">GOOS</span>=windows <span class="attribute">GOARCH</span>=amd64 make release-client</span><br></pre></td></tr></table></figure></p><h3 id="服务端运行"><a href="#服务端运行" class="headerlink" title="服务端运行"></a>服务端运行</h3><ol><li><p>进入到ngrok的bin目录下  </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/ngrok/bin</span><br><span class="line">./ngrokd <span class="attribute">-domain</span>=<span class="string">"<span class="variable">$NGROK_DOMAIN</span>"</span> <span class="attribute">-httpAddr</span>=<span class="string">":60"</span> <span class="attribute">-httpsAddr</span>=<span class="string">":63"</span></span><br></pre></td></tr></table></figure></li><li><p>如果出现如下提示,说明服务端开启成功</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[06:59:42 UTC 2018/03/24]</span> <span class="selector-attr">[INFO]</span> (ngrok/log.(*PrefixLogger).<span class="attribute">Info</span>:<span class="number">83</span>) <span class="selector-attr">[registry]</span> <span class="selector-attr">[tun]</span> <span class="selector-tag">No</span> <span class="selector-tag">affinity</span> <span class="selector-tag">cache</span> <span class="selector-tag">specified</span></span><br><span class="line"><span class="selector-attr">[06:59:42 UTC 2018/03/24]</span> <span class="selector-attr">[INFO]</span> (ngrok/log.<span class="attribute">Info</span>:<span class="number">112</span>) <span class="selector-tag">Listening</span> <span class="selector-tag">for</span> <span class="selector-tag">public</span> <span class="selector-tag">http</span> <span class="selector-tag">connections</span> <span class="selector-tag">on</span> <span class="selector-attr">[::]</span><span class="selector-pseudo">:60</span></span><br><span class="line"><span class="selector-attr">[06:59:42 UTC 2018/03/24]</span> <span class="selector-attr">[INFO]</span> (ngrok/log.<span class="attribute">Info</span>:<span class="number">112</span>) <span class="selector-tag">Listening</span> <span class="selector-tag">for</span> <span class="selector-tag">public</span> <span class="selector-tag">https</span> <span class="selector-tag">connections</span> <span class="selector-tag">on</span> <span class="selector-attr">[::]</span><span class="selector-pseudo">:63</span></span><br><span class="line"><span class="selector-attr">[06:59:42 UTC 2018/03/24]</span> <span class="selector-attr">[INFO]</span> (ngrok/log.<span class="attribute">Info</span>:<span class="number">112</span>) <span class="selector-tag">Listening</span> <span class="selector-tag">for</span> <span class="selector-tag">control</span> <span class="selector-tag">and</span> <span class="selector-tag">proxy</span> <span class="selector-tag">connections</span> <span class="selector-tag">on</span> <span class="selector-attr">[::]</span><span class="selector-pseudo">:4443</span></span><br><span class="line"><span class="selector-attr">[06:59:42 UTC 2018/03/24]</span> <span class="selector-attr">[INFO]</span> (ngrok/log.(*PrefixLogger).<span class="attribute">Info</span>:<span class="number">83</span>) <span class="selector-attr">[metrics]</span> <span class="selector-tag">Reporting</span> <span class="selector-tag">every</span> <span class="selector-tag">30</span> <span class="selector-tag">seconds</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="客户端运行与使用"><a href="#客户端运行与使用" class="headerlink" title="客户端运行与使用"></a>客户端运行与使用</h3><p>mac 客户端的位置：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/ngrok/</span>bin<span class="regexp">/darwin_amd64/</span>ngrok</span><br></pre></td></tr></table></figure></p><p>windows 客户端的位置：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/ngrok/</span>bin<span class="regexp">/windows_amd64/</span>ngrok.exe</span><br></pre></td></tr></table></figure></p><p>linux 客户端的位置：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/ngrok/</span>bin<span class="regexp">/ngrok</span></span><br></pre></td></tr></table></figure></p><p>新建ngrok.cfg文件(配置文件)<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">server_addr:</span> <span class="string">"ngrok.lestat.me:4443"</span></span><br><span class="line"><span class="symbol">trust_host_root_certs:</span> false</span><br><span class="line"><span class="symbol">tunnels:</span> <span class="meta">#可定义多个域名</span></span><br><span class="line"><span class="symbol">  test1:</span></span><br><span class="line"><span class="symbol">   subdomain:</span> <span class="string">"test1"</span> <span class="meta">#定义服务器分配域名前缀</span></span><br><span class="line"><span class="symbol">   proto:</span></span><br><span class="line"><span class="symbol">    http:</span> <span class="number">80</span> <span class="meta">#映射端口，不加ip默认本机</span></span><br><span class="line"><span class="symbol">  test2:</span></span><br><span class="line"><span class="symbol">   subdomain:</span> <span class="string">"test2"</span> <span class="meta">#定义服务器分配域名前缀</span></span><br><span class="line"><span class="symbol">   proto:</span></span><br><span class="line"><span class="symbol">    http:</span> <span class="number">81</span> <span class="meta">#映射端口，不加ip默认本机</span></span><br></pre></td></tr></table></figure></p><p>从命令行运行客户端文件,如下:<br>方法1:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ngrok <span class="attribute">-config</span>=ngrok.cfg <span class="attribute">-log</span>=ngrok.log start test1</span><br></pre></td></tr></table></figure></p><p>方法2:(最后一个8080代表映射的本地主机端口)<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ngrok <span class="attribute">-config</span>=ngrok.cfg <span class="attribute">-log</span>=ngrok.log <span class="attribute">-subdomain</span>=test1 8080</span><br></pre></td></tr></table></figure></p><p>如果返回相似于以下的内容,说明客户端启动成功<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Tunnel</span> Status                 online                         </span><br><span class="line">Version                       <span class="number">1</span>.<span class="number">7</span>/<span class="number">1</span>.<span class="number">7</span>                        </span><br><span class="line">Forwarding                    https://hccrm.ngrok.lestat.me:60 -&gt; <span class="number">127.0.0.1:80</span>  </span><br><span class="line">Forwarding                    http://hccrm.ngrok.lestat.me:60 -&gt; <span class="number">127.0.0.1:80</span>   </span><br><span class="line">Web Interface                 <span class="number">127.0.0.1:4040</span>                 </span><br><span class="line"><span class="comment"># Conn                        0                              </span></span><br><span class="line">Avg Conn Time                 <span class="number">0</span>.<span class="number">00ms</span></span><br></pre></td></tr></table></figure></p><h3 id="nginx反向代理相关配置"><a href="#nginx反向代理相关配置" class="headerlink" title="nginx反向代理相关配置"></a>nginx反向代理相关配置</h3><p>假设:  </p><ol><li>ngrok监听http的端口为60</li><li>nginx监听了当前服务器的80端口(域名访问hccrm.ngrok.lestat.me时会直接访问到nginx监听的80端口,因此需要nginx转发)<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  <span class="regexp">*.ngrok.lestat.me</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host  <span class="variable">$http_host</span>:<span class="number">60</span>; <span class="comment">#此处端口要跟 启动服务端ngrok 时指定的端口一致</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Nginx-Proxy <span class="literal">true</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">""</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span>  http://127.0.0.1:60; <span class="comment"># 反向代理对应的本地ip:port</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>重启nginx<br><code>service nginx reload</code></p><p>至此,已实现了内网穿透<br>目前存在的问题:</p><ol><li>目前不知如何实现对本地虚拟主机的访问(例如本地apache上httpd-vhosts中配置的虚拟主机)  </li><li>由于ngrok1.x已于两年前停止维护,再加上第一个问题1,因此后续准备写一篇关于<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">frp</a>的搭建记录,这是一个长期维护的开源项目,值得学习!  </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浅谈shadowsocks中的pac配置</title>
    <link href="https://lestatmiao.github.io/2018/02/14/%E6%B5%85%E8%B0%88shadowsocks%E4%B8%AD%E7%9A%84pac%E9%85%8D%E7%BD%AE/"/>
    <id>https://lestatmiao.github.io/2018/02/14/浅谈shadowsocks中的pac配置/</id>
    <published>2018-02-14T03:43:29.000Z</published>
    <updated>2018-02-14T05:36:22.916Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>大概是从去年开始使用的shadowsocks实现科学上网,当时在配置完代理服务器之后能够用了就没管其他的配置。<br>直到最近想在维基百科上注册一个账号的时候发现<br><img src="https://lestat.b0.upaiyun.com/blog/wiki-forbidden.png" alt=""><br>由于一些原因,当前使用代理的ip被封禁了<br>由于GFW是通过<a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98%E6%B1%A1%E6%9F%93" target="_blank" rel="noopener">dns污染</a>的方式屏蔽了zh.wikipedia.org(其他语言的wikipedia其实是可以在国内直接访问的比如<a href="https://en.wikipedia.org" target="_blank" rel="noopener">英文站</a>),这个问题可以通过关闭代理并修改hosts文件解决,但这样太麻烦,因为需要定期更新hosts文件的ip地址,后来google了一下发现shadowsocks里面有一个名为pac的文件,这个文件的域名列表来自于<a href="https://github.com/gfwlist/gfwlist" target="_blank" rel="noopener">GFWlist</a>,而正是这个文件决定了shadowsocks处于pac模式时哪些域名需要被代理,在这个文件之外的域名都会直接访问。因此,解决维基的ip封禁且要继续使用代理上网只需要2个步骤  </p><ol><li>修改本地hosts为wikipedia中文当前的ip(解决dns污染)</li><li>修改pac文件中的配置,将wikipedia.org相关的配置去掉即可  </li></ol><p><strong>PAC的优势</strong><br>PAC自动代理属于智能判断模式，相比全局代理，它的优点有：  </p><ol><li>不影响国内网站的访问速度，防止无意义的绕路</li><li>节省Shadowsocks服务的流量，节省服务器资源</li><li>控制方便</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>近期工作中的收获</title>
    <link href="https://lestatmiao.github.io/2018/02/07/%E8%BF%91%E6%9C%9F%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E6%94%B6%E8%8E%B7/"/>
    <id>https://lestatmiao.github.io/2018/02/07/近期工作中的收获/</id>
    <published>2018-02-07T09:18:00.000Z</published>
    <updated>2018-02-07T09:23:27.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>眼下快要过年了,手头的项目也终于接近尾声,抽点时间来记录下近段时间的工作心得<br>前段时间在工作之余我抽空看了一些<a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">ECMA6</a>的语法,简单学习了一下<a href="https://doc.webpack-china.org/" target="_blank" rel="noopener">webpack</a>,了解了<a href="https://babeljs.cn/" target="_blank" rel="noopener">babel</a>,后面也尝试着使用<a href="https://github.com/vuejs/vue-cli" target="_blank" rel="noopener">vue-cli</a>搭建自己的demo并熟悉其中的结构  </p><p>说说最近做的一个项目:一个接口开发(前端)项目,接口由客户提供(java开发,json数据格式),我方负责移动端web开发和后台页面的开发,并调试好所有接口(后端接口情况:权限相关[14],会员模块[10],片库[14],,出品[19],媒体[15],资讯[11],直通车[14],ip活动[12],营销联盟[13])<br>刚拿到需求的时候我还是比较担心能否搞定,毕竟作为一个phper之前的确没有搞过spa的开发,但之前做了那么多spa的功课,也觉得是时候真正的实践一下了,于是很快找到了一个基于<a href="https://cn.vuejs.org/index.html" target="_blank" rel="noopener">vue</a>+<a href="http://element-cn.eleme.io/#/zh-CN/component/installation" target="_blank" rel="noopener">elementui</a>的后台框架<a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener">vue-element-admin</a>,<strong>据我最近观察,这个项目在github上每天平均增加将近100个star…</strong>  </p><p>这个框架替我们完成了很多基本方法的封装,路由访问权限,页眉标签切换,常用的各种表格,表单等;开发起来效率相对较高,在我后来实际的开发中也应证了这点<br>最后花了两周时间,搭建了一个小型后台管理系统并完成所有接口的调试<br>使用vue做开发的感觉就是代码比曾经用jq的项目更规范(也可能是因为框架中引入了eslint,配合vscode的eslint+prettier一键格式化,实现简单操作就能遵循eslint代码规范);由于vue-cli已经将webpack,babel打包好,并且实现了<code>ctrl</code>+<code>s</code>自动刷新页面预览且不会清空<code>console</code>里面的内容,开发的体验变得非常好。<br>强烈推荐chrome的<code>Vue DevTools</code>插件,安装完成后可以在chrome右上方看到vue的logo,在dev模式下的页面可以直接看到开发者工具的标签栏多出一个Vue标签,点击即可查看到当前页面的信息!  </p><p>目前为止,自己对vue的了解还不够深入,对vuex,组件的使用还不够灵活,还需要更多的实践  </p><p><strong>新的一年,继续加油!</strong></p><p><img src="https://lestat.b0.upaiyun.com/blog/dontgiveup.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vue开发中的一些总结</title>
    <link href="https://lestatmiao.github.io/2018/01/26/Vue%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82/"/>
    <id>https://lestatmiao.github.io/2018/01/26/Vue开发中的一些细节/</id>
    <published>2018-01-26T08:20:18.000Z</published>
    <updated>2018-01-26T08:33:24.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="关于axios的使用细节"><a href="#关于axios的使用细节" class="headerlink" title="关于axios的使用细节"></a>关于axios的使用细节</h3><p>基于vue做spa开发,个人很多时候使用的请求扩展是<a href="https://github.com/axios/axios" target="_blank" rel="noopener">axios</a>,这个扩展会把常用的请求封装好发送出去,使用的时候只需要传参数即可。今天遇到的一个问题是后端接口接收<code>get</code>方式传参,我这边有一个数组需要通过<code>get</code>方式传递过去,假设数组名称是:<code>ids</code>,请求中默认就是<code>ids[]</code>的形式,接口需要提供<code>ids</code>的形式,此时需要引入<a href="https://github.com/ljharb/qs" target="_blank" rel="noopener">qs</a>扩展,并在请求位置添加一项配置,以转换参数格式,示例代码如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* todo :会员审核列表的通过与驳回(批量和单个为同一个方法), 需要管理员登陆</span></span><br><span class="line"><span class="comment">* @param data object</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">userInfoCheck</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> request(&#123;</span><br><span class="line">    url: <span class="string">'/backend/userInfoCheck'</span>,</span><br><span class="line">    method: <span class="string">'get'</span>,</span><br><span class="line">    params: data,</span><br><span class="line">    paramsSerializer: <span class="function"><span class="keyword">function</span>(<span class="params">params</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> qs.stringify(params, &#123; <span class="attr">arrayFormat</span>: <span class="string">'repeat'</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="vue" scheme="https://lestatmiao.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>关于vue中$nextTick的一点使用心得</title>
    <link href="https://lestatmiao.github.io/2018/01/24/vue%E5%BC%80%E5%8F%91%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%B0%8F%E7%BB%93/"/>
    <id>https://lestatmiao.github.io/2018/01/24/vue开发中遇到的问题小结/</id>
    <published>2018-01-24T02:10:57.000Z</published>
    <updated>2018-01-24T02:54:29.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>当下公司在做一个媒体门户网站,后台由另一家公司使用java开发并提供接口,本人负责开发后台页面,使用的是<a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener">vue-element-admin</a>开发<br>下面说一下问题场景,在开发过程中有一个后台管理员角色页面,其中包含一个表单dialog,在其中使用了el-tree组件,<strong>相关</strong> 代码结构如下:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"filter-container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">"filter-item"</span> <span class="attr">style</span>=<span class="string">"margin-left: 10px;"</span> <span class="attr">v-waves</span> @<span class="attr">click</span>=<span class="string">"handleCreate"</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span>&gt;</span>新增角色</span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:title</span>=<span class="string">"textMap[dialogStatus]"</span> <span class="attr">:visible.sync</span>=<span class="string">"dialogFormVisible"</span> <span class="attr">width</span>=<span class="string">"50%"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:rules</span>=<span class="string">"rules"</span> <span class="attr">ref</span>=<span class="string">"dataForm"</span> <span class="attr">:model</span>=<span class="string">"temp"</span> <span class="attr">label-position</span>=<span class="string">"top"</span> <span class="attr">label-width</span>=<span class="string">"90px"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">style</span>=<span class="string">'width: 400px; margin-left:50px;'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"选择权限"</span> <span class="attr">prop</span>=<span class="string">"sysPermission"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-tree</span> <span class="attr">ref</span>=<span class="string">"tree"</span> <span class="attr">:data</span>=<span class="string">"sysPermission"</span> <span class="attr">:props</span>=<span class="string">"formProps"</span> <span class="attr">show-checkbox</span></span></span><br><span class="line"><span class="tag">                   @<span class="attr">check-change</span>=<span class="string">"handleCheckChange"</span> <span class="attr">node-key</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-tree</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>相关的js如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">        name: <span class="string">'sysRoleList'</span>,</span><br><span class="line">        data() &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                tableKey: <span class="number">0</span>,</span><br><span class="line">                list: <span class="literal">null</span>,</span><br><span class="line">                total: <span class="literal">null</span>,</span><br><span class="line">                listLoading: <span class="literal">true</span>,</span><br><span class="line">                formLoading: <span class="literal">true</span>,</span><br><span class="line">                listQuery: &#123;</span><br><span class="line">                    page: <span class="number">1</span>,</span><br><span class="line">                    limit: <span class="number">20</span>,</span><br><span class="line">                    importance: <span class="literal">undefined</span>,</span><br><span class="line">                    title: <span class="literal">undefined</span>,</span><br><span class="line">                    type: <span class="literal">undefined</span>,</span><br><span class="line">                    sort: <span class="string">'+id'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                dialogFormVisible: <span class="literal">false</span>,</span><br><span class="line">                dialogStatus: <span class="string">'update'</span>,</span><br><span class="line">                textMap: &#123;</span><br><span class="line">                    update: <span class="string">'编辑角色'</span>,</span><br><span class="line">                    create: <span class="string">'新增角色'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                rules: &#123;</span><br><span class="line">                    sysRoleName: [&#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">'必须填写角色名称'</span>, <span class="attr">trigger</span>: <span class="string">'blur'</span>&#125;]</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="comment">// 表单数据</span></span><br><span class="line">                temp: &#123;</span><br><span class="line">                    id: <span class="string">''</span>,</span><br><span class="line">                    sysPermissionList: [],</span><br><span class="line">                    sysRoleName: <span class="string">''</span></span><br><span class="line">                &#125;,</span><br><span class="line">                currentKeys: [],</span><br><span class="line">                <span class="comment">// 表单权限字段映射</span></span><br><span class="line">                formProps: &#123;</span><br><span class="line">                    label: <span class="string">'sysPermissionName'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                sysPermission: &#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line">            <span class="comment">// 列表数据</span></span><br><span class="line">            <span class="comment">// this.getList()</span></span><br><span class="line">            <span class="comment">// 获取所有权限</span></span><br><span class="line">            <span class="comment">// this.findAllSysPermission()</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * todo:checkbox状态变更监听</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            handleCheckChange(data, checked, indeterminate) &#123;</span><br><span class="line">                <span class="keyword">const</span> idObj = &#123;<span class="attr">id</span>: data.id&#125;</span><br><span class="line">                <span class="keyword">this</span>.temp.sysPermissionList.push(idObj)</span><br><span class="line">            &#125;,</span><br><span class="line">            resetTemp() &#123;</span><br><span class="line">                <span class="keyword">this</span>.temp = &#123;</span><br><span class="line">                    id: <span class="string">''</span>,</span><br><span class="line">                    sysRoleName: <span class="string">''</span>,</span><br><span class="line">                    sysPermissionList: []</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            handleCreate() &#123;</span><br><span class="line">                <span class="keyword">this</span>.resetTemp()</span><br><span class="line">                <span class="keyword">this</span>.dialogStatus = <span class="string">'create'</span></span><br><span class="line">                <span class="keyword">this</span>.currentKeys = []</span><br><span class="line">                <span class="keyword">this</span>.dialogFormVisible = <span class="literal">true</span></span><br><span class="line">                <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">this</span>.$refs[<span class="string">'dataForm'</span>].clearValidate()</span><br><span class="line">                    <span class="keyword">this</span>.$refs.tree.setCheckedKeys(<span class="keyword">this</span>.currentKeys)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            handleUpdate(row) &#123;</span><br><span class="line">                <span class="keyword">this</span>.resetTemp()</span><br><span class="line">                <span class="keyword">this</span>.dialogStatus = <span class="string">'update'</span></span><br><span class="line">                <span class="keyword">this</span>.dialogFormVisible = <span class="literal">true</span></span><br><span class="line">                <span class="keyword">this</span>.temp = <span class="built_in">Object</span>.assign(&#123;&#125;, row) <span class="comment">// copy obj</span></span><br><span class="line">                <span class="keyword">this</span>.currentKeys = []</span><br><span class="line">                row.sysPermissionList.forEach(<span class="function">(<span class="params">value, index</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">this</span>.currentKeys.push(value[<span class="number">0</span>])</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">this</span>.$refs[<span class="string">'dataForm'</span>].clearValidate()</span><br><span class="line">                    <span class="keyword">this</span>.$refs.tree.setCheckedKeys(<span class="keyword">this</span>.currentKeys)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>需求:<br>需要在每次编辑数据的时候触发<code>&lt;el-tree&gt;</code>的方法<code>setCheckedKeys</code><br>问题:<br>之前没有把<code>this.$refs.tree.setCheckedKeys()</code>写在<code>this.$nextTick</code>的callback之中,因此会提示:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TypeError</span>: Cannot read property <span class="string">'setCheckedKeys'</span> <span class="keyword">of</span> <span class="literal">undefined</span></span><br></pre></td></tr></table></figure></p><p>解决方法:<br>把dialog组件内的其他需要执行方法的组件方法写到<code>this.$nextTick</code>的callback之中<br>原因如下(官方):  </p><blockquote><p>可能你还没有注意到，Vue 异步执行 DOM 更新。只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据改变。如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作上非常重要。然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。Vue 在内部尝试对异步队列使用原生的 Promise.then 和 MessageChannel，如果执行环境不支持，会采用 setTimeout(fn, 0) 代替。<br>例如，当你设置 vm.someData = ‘new value’ ，该组件不会立即重新渲染。当刷新队列时，组件会在事件循环队列清空时的下一个“tick”更新。多数情况我们不需要关心这个过程，但是如果你想在 DOM 状态更新后做点什么，这就可能会有些棘手。虽然 Vue.js 通常鼓励开发人员沿着“数据驱动”的方式思考，避免直接接触 DOM，但是有时我们确实要这么做。为了在数据变化之后等待 Vue 完成更新 DOM ，可以在数据变化之后立即使用 Vue.nextTick(callback) 。这样回调函数在 DOM 更新完成后就会调用。<br><a href="https://cn.vuejs.org/v2/guide/reactivity.html" target="_blank" rel="noopener">深入响应式原理</a>  </p></blockquote><p>个人理解:<br>vue这么做是因为频繁的更新dom是特别耗费性能的，所以搞了一个批处理更新，把所有的update操作放到任务队列中，等主线程中执行栈的所有同步任务执行完毕，系统就会读取任务队列<br>一个比较典型的场景，created回调里是无法直接通过this.$refs获取到用ref命名的子组件的，只有通过$nextTick才能访问到。还有比如dialog里有一个步骤条组件，在每次打开对话框都想触发步骤1的动作。如果直接写step=0;step=1;是不会有变化的，因为整个函数执行完之前DOM都不会刷新。把step=1放到$nextTick里就可以了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="vue" scheme="https://lestatmiao.github.io/tags/vue/"/>
    
      <category term="组件" scheme="https://lestatmiao.github.io/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>certbot+letsencrypt配置免费单证书多域名ssl证书</title>
    <link href="https://lestatmiao.github.io/2018/01/03/certbot-letsencrypt%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6/"/>
    <id>https://lestatmiao.github.io/2018/01/03/certbot-letsencrypt配置ssl证书/</id>
    <published>2018-01-03T08:44:05.000Z</published>
    <updated>2018-03-08T01:58:14.827Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>前些天看到微信公众平台官方公告<a href="https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&amp;announce_id=1505983913&amp;version=&amp;lang=zh_CN" target="_blank" rel="noopener">关于公众平台接口不再支持HTTP方式调用的公告</a>之后决定把项目的协议从<code>http</code>改成<code>https</code>,于是开始在网上查,完成之后总结了一点经验</strong>  </p><blockquote><p>本文演示的是通用证书,即在<code>certbot</code>命令中不需要指定<code>--apache</code>或者<code>--nginx</code>之类,只需要在完成证书生成之后在服务器配置文件里进行引用即可</p></blockquote><h3 id="Let’s-Encrypt"><a href="#Let’s-Encrypt" class="headerlink" title="Let’s Encrypt"></a>Let’s Encrypt</h3><p>Let’s Encrypt 认证签发为每3个月一次，也就是每 90 天必须更新（renew）一次。取得认证的过程需要进主机安裝代理程序:<a href="https://certbot.eff.org/" target="_blank" rel="noopener">certbot</a>,下面以ubuntu为例:  </p><ul><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install software-properties-common</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:certbot/certbot</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install certbot</span></span><br></pre></td></tr></table></figure></li><li><p>生成证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo certbot certonly</span></span><br></pre></td></tr></table></figure></li></ul><p>此时会出现选项,按照提示选择即可  </p><ul><li>证书自动续期可以使用<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certbot renew <span class="comment">--force-renew</span></span><br></pre></td></tr></table></figure></li></ul><p>手动强制为证书续期<br>如果出现以下提示则说明更新成功<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, all renew<span class="type">als</span> succeeded. The following certs have been renew<span class="type">ed</span>:</span><br></pre></td></tr></table></figure></p><p>但为了更方便,通常使用<code>crontab -e</code>编辑定时任务,并加入<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">1</span> * * certbot renew --force-renew “重启服务器命令”</span><br></pre></td></tr></table></figure></p><p>实现每个月1号0点自动续期</p><h3 id="在服务器配置相关证书"><a href="#在服务器配置相关证书" class="headerlink" title="在服务器配置相关证书"></a>在服务器配置相关证书</h3><p><a href="https://lestatmiao.github.io/2017/09/08/apache2-ssl/">apache2开启SSL</a></p><p><strong>tips:</strong><br>如果有多个域名  </p><ol><li>可以用过在<code>Please enter in your domain name(s) (comma and/or space separated)  (Enter &#39;c&#39;to cancel):</code>步骤通过<code>,</code>来分隔域名</li><li><p>可以使用以下命令来直接生成多个域名的证书</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo certbot certonly --webroot -w /var/www/example -d example<span class="selector-class">.com</span> -d www<span class="selector-class">.example</span><span class="selector-class">.com</span> -w /var/www/thing -d thing<span class="selector-class">.is</span> -d m<span class="selector-class">.thing</span><span class="selector-class">.is</span></span><br></pre></td></tr></table></figure></li><li><p>生成的证书通常保存在<code>/etc/letsencrypt/live/</code>目录下</p></li></ol><blockquote><p>注意:如果失败超过5次会被服务器屏蔽1小时</p></blockquote><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>以上操作完成后在pc端浏览器可正常读取证书并显示绿色锁,但在部分移动端浏览器上可能提示证书无效,原因可以参考<a href="https://blog.v2ssl.com/2017/02/07/%E5%90%88%E5%B9%B6ssl%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%81%E4%B9%A6%E5%92%8Cca%E5%8C%85%E8%AF%81%E4%B9%A6%E9%93%BE%E6%96%87%E4%BB%B6.html" target="_blank" rel="noopener">合并SSL服务器证书和CA包(证书链文件)</a><br>简单来说,可以通过合并SSL服务器证书和CA包(证书链文件)<br>即:复制fullchain.pem里的内容至cert.pem,重启服务器即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="ssl" scheme="https://lestatmiao.github.io/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title>记录一次centos6排查80端口无法访问的问题</title>
    <link href="https://lestatmiao.github.io/2017/12/28/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1centos6%E6%8E%92%E6%9F%A580%E7%AB%AF%E5%8F%A3%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://lestatmiao.github.io/2017/12/28/记录一次centos6排查80端口无法访问的问题/</id>
    <published>2017-12-28T07:49:02.000Z</published>
    <updated>2017-12-28T08:26:43.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>大概是一个月前的事情了,最近工作繁忙,暂时忘了记录…</strong>  </p><p>当时的情况大概是这样:<br>客户的机房开通的是广电网的固定IP,服务器系统是 centos6.8,已知 80 端口和 22 端口对外是开放并能访问的;<br>服务器上有两个 web 项目,一个对应 80 端口,一个对应 8080 端口<br>web 服务器是 apache2.2,目前监听了 80 和 8080 端口,httpd-vhosts.conf 下有两个虚拟机配置,分别对应 80 和 8080 端口;<br>防火墙状态:service iptables status(iptables：未运行防火墙。)<br>SELinux 状态:getenforce (Disabled)<br>项目目录的访问权限是足够的<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">lsof -i :8080</span><br><span class="line"></span><br><span class="line">httpd 22357 root 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 22431 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 22433 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 22478 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 22668 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN) httpd 22690 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 23028 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 23030 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 23760 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 23761 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 23762 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line">httpd 23855 www 6u<span class="built_in"> IPv6 </span>27111118 0t0 TCP *:webcache (LISTEN)</span><br><span class="line"></span><br><span class="line">netstat -nlpt</span><br><span class="line">Active Internet connections (only servers) Proto Recv-Q Send-Q Local<span class="built_in"> Address </span>Foreign<span class="built_in"> Address </span>State PID/Program name</span><br><span class="line">tcp 0 0 0.0.0.0:58726 0.0.0.0:* LISTEN 2630/rpc.statd</span><br><span class="line">tcp 0 0 0.0.0.0:3306 0.0.0.0:* LISTEN 6324/mysqld</span><br><span class="line">tcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN 2574/rpcbind</span><br><span class="line">tcp 0 0 0.0.0.0:21 0.0.0.0:* LISTEN 3235/pure-ftpd (SER tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 3941/sshd</span><br><span class="line">tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN 2668/cupsd</span><br><span class="line">tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN 3109/sendmail</span><br><span class="line">tcp 0 0 :::34760 :::* LISTEN 2630/rpc.statd</span><br><span class="line">tcp 0 0 :::111 :::* LISTEN 2574/rpcbind</span><br><span class="line">tcp 0 0 :::8080 :::* LISTEN 22357/httpd</span><br><span class="line">tcp 0 0 :::80 :::* LISTEN 22357/httpd</span><br><span class="line">tcp 0 0 :::21 :::* LISTEN 3235/pure-ftpd (SER tcp 0 0 :::22 :::* LISTEN 3941/sshd</span><br><span class="line">tcp 0 0 ::1:631 :::* LISTEN 2668/cupsd</span><br><span class="line">tcp 0 0 :::443 :::* LISTEN 22357/httpd</span><br></pre></td></tr></table></figure></p><p>问题: 服务器的 8080 端口在本地可以通过 curl 命令(curl <a href="http://localhost:8080)获取到" target="_blank" rel="noopener">http://localhost:8080)获取到</a> index.php 的内容,但是外网无法通过 ip:port 的形式访问到</p><p>最后锁定问题:8080端口被机房限制了…</p><blockquote><p>NOTE:这种情况通常排查机房或运营商是否对无法访问的端口进行了限制<br>附上本人当时在v2ex上发的<a href="https://www.v2ex.com/t/410815" target="_blank" rel="noopener">主题</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="centos6" scheme="https://lestatmiao.github.io/tags/centos6/"/>
    
      <category term="端口" scheme="https://lestatmiao.github.io/tags/%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>SoapClient的一点总结</title>
    <link href="https://lestatmiao.github.io/2017/12/18/SoapClient%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>https://lestatmiao.github.io/2017/12/18/SoapClient的一点总结/</id>
    <published>2017-12-18T02:10:54.000Z</published>
    <updated>2017-12-18T03:11:19.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>近期在开发一个小型的酒店订房系统</strong>  </p><hr><p><strong>应用场景:</strong>由于是在公司之前一个订房系统基础上进行修改,因此工作量不算大,但需要在系统中多个位置和酒店方提供的另一个PMS系统的信息进行对接(部分数据需要同步[库存,房间编号,订单信息等等]),接口使用<code>xml</code>格式进行数据传递,后端开发语言是php  </p><hr><p><strong>问题:</strong>开发中遇到的一个坑就是使用SoapClient在调用PMS系统接口的时候会出现间歇性404(Solution: Soap WSDL Error - “failed to load external entity”)  </p><hr><p><strong>解决方法:</strong>向PMS接口提供方反应这个情况之后那边说接口正常,后来网上查阅才发现需要使用<a href="http://php.net/manual/zh/function.libxml-disable-entity-loader.php" target="_blank" rel="noopener">libxml_disable_entity_loader(false)</a>这个函数来打开<code>entity_loader</code>,随即问题解决.该函数通常添加在需要使用<code>SoapClient</code>实例的脚本上方</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="Soap" scheme="https://lestatmiao.github.io/tags/Soap/"/>
    
      <category term="接口" scheme="https://lestatmiao.github.io/tags/%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>phpexcel踩坑记</title>
    <link href="https://lestatmiao.github.io/2017/12/01/phpexcel%E8%B8%A9%E5%9D%91%E8%AE%B0/"/>
    <id>https://lestatmiao.github.io/2017/12/01/phpexcel踩坑记/</id>
    <published>2017-12-01T04:48:17.000Z</published>
    <updated>2017-12-01T05:08:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>最近在使用phpexcel扩展处理表格导入的时候,遇到两个坑,现做以下记录</p><ul><li><p>坑一:excel表中的富文本导入后数据始终不对</p><blockquote><p>解决方法:假设$temp为循环读取的每列数据值,判断是否是<code>PHPExcel_RichText</code>类的实例,如果是,则调用$temp自身的方法__toString()转换,代码如下:  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($temp <span class="keyword">instanceof</span> PHPExcel_RichText) $temp = $temp-&gt;__toString();</span><br></pre></td></tr></table></figure></blockquote></li><li><p>坑二:excel表中的日期导入后变成了<code>float</code>类型的值  </p><blockquote><p>解决方法:假设$temp为循环读取的每列数据值,假设日期所在列为<code>D</code><br>代码如下(这里的if仅仅是用来判断日期是否为空,如果不判断,为空时会自动用当前时间填充,根据实际业务决定):  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($k==<span class="string">'D'</span>)&#123;<span class="comment">//指定D列为时间所在列</span></span><br><span class="line">    $date = $objPHPExcel-&gt;getActiveSheet()-&gt;getCell(<span class="string">"$k$j"</span>)-&gt;getValue();</span><br><span class="line">    <span class="keyword">if</span>($date)&#123;</span><br><span class="line">        $temp = date(<span class="string">"Y-m-d"</span>, PHPExcel_Shared_Date::ExcelToPHP($date));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $temp = <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $temp = $objPHPExcel-&gt;getActiveSheet()-&gt;getCell(<span class="string">"$k$j"</span>)-&gt;getValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li></ul><p>目前暂未发现其他坑</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="php" scheme="https://lestatmiao.github.io/tags/php/"/>
    
      <category term="excel" scheme="https://lestatmiao.github.io/tags/excel/"/>
    
      <category term="扩展" scheme="https://lestatmiao.github.io/tags/%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>一个投票项目的总结</title>
    <link href="https://lestatmiao.github.io/2017/11/20/%E4%B8%80%E4%B8%AA%E6%8A%95%E7%A5%A8%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%80%BB%E7%BB%93/"/>
    <id>https://lestatmiao.github.io/2017/11/20/一个投票项目的总结/</id>
    <published>2017-11-20T05:57:24.000Z</published>
    <updated>2017-11-20T06:28:46.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>最近开发了一个只有3个页面的微信投票小项目<br>基本流程:一个微信号一天只能对一个参与者投一次票且一天总共可以对不同参与者投10次票<br>首页内容:展示所有投票参与者以及其得票数,按照编号排序(支持点击投票)<br>排行页内容:展示所有投票参与者以及其得票数,按照得票数排序<br>详情页内容:展示指定参与者以及其得票数(支持点击投票)<br>后台略过…<br>项目上线后服务器cpu长时间负载100%,仔细查看后发现几个主要问题:  </p><ol><li>首页和详情页js中没有对触发异步请求的<code>请求中</code>状态(已发出请求且未收到响应[<code>搜索</code>,<code>下一页加载</code>,<code>投票操作</code>])没有禁用处理和提示,可能导致用户连续点击操作,挂起多个请求<br><strong>解决方法:添加对应请求中的状态,在发出请求后,收到响应前都无法再次发出相同请求</strong>  </li><li>之前有对三个页面的访问量进行统计,但用的是简单粗暴每次访问都直接更新数据库的响应字段值,导致并发增加时数据库写入次数过多<br><strong>解决方法:配置一个值,每次请求时先将总访问量+1,再判断如果等于配置值,则更新数据库的总访问量并清空缓存,反之写入缓存</strong>  </li><li>忘了关闭TP框架的调试模式(调试模式会使模板缓存和字段缓存失效)<br><strong>解决方法:关闭调试模式</strong>  </li><li>mysql数据表的联合索引没有生效(原因待定)  </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="并发" scheme="https://lestatmiao.github.io/tags/%E5%B9%B6%E5%8F%91/"/>
    
      <category term="缓存" scheme="https://lestatmiao.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
      <category term="优化" scheme="https://lestatmiao.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>ab测试中并发量导致的拒绝问题</title>
    <link href="https://lestatmiao.github.io/2017/11/15/ab%E6%B5%8B%E8%AF%95%E4%B8%AD%E5%B9%B6%E5%8F%91%E9%87%8F%E5%AF%BC%E8%87%B4%E7%9A%84%E6%8B%92%E7%BB%9D%E9%97%AE%E9%A2%98/"/>
    <id>https://lestatmiao.github.io/2017/11/15/ab测试中并发量导致的拒绝问题/</id>
    <published>2017-11-15T06:24:33.000Z</published>
    <updated>2017-11-15T07:50:28.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今天对一个微信投票的小项目进行ab测试<br>环境:windows 10+cmd(管理员身份)<br>问题:在输入了<code>ab -n 5000 -c 500 http://hostname/</code>并<code>enter</code>之后等待片刻出现了<code>apr_socket_connect():由于目标计算机积极拒绝，无法连接。(730061)</code><br>在网上找到了其他人的方法,参考后,问题解决<br>解决方法:找到http.conf,打开,找到关于<code>httpd-mpm.conf</code>的引用配置,如果没有引用,则去掉<code>#</code>,反之则无视,打开<code>httpd-mpm.conf</code>文件,将其中的<code>ThreadsPerChild</code>参数值调大,重启<code>Apache</code>即可</p><blockquote><p>补充:在后续的测试中遇到了<code>apr_poll: The timeout specified has expired (70007)</code>的提示<br>解决方法:使用<code>-k</code>参数(Connection: Keep-Alive)</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="压力测试" scheme="https://lestatmiao.github.io/tags/%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>head标签中自动设置ie内核版本的写法</title>
    <link href="https://lestatmiao.github.io/2017/11/11/head%E6%A0%87%E7%AD%BE%E4%B8%AD%E8%87%AA%E5%8A%A8%E8%AE%BE%E7%BD%AEie%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC%E7%9A%84%E5%86%99%E6%B3%95/"/>
    <id>https://lestatmiao.github.io/2017/11/11/head标签中自动设置ie内核版本的写法/</id>
    <published>2017-11-10T16:25:35.000Z</published>
    <updated>2017-11-10T16:29:58.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>最近在开发中遇到后台管理系统部分样式,js对IE浏览器不兼容的情况,最后通过在head标签中添加如下代码实现自动设置IE内核版本解决:  </p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,Chrome=1"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=9"</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
      <category term="mysql" scheme="https://lestatmiao.github.io/categories/mysql/"/>
    
    
      <category term="IE" scheme="https://lestatmiao.github.io/tags/IE/"/>
    
      <category term="兼容" scheme="https://lestatmiao.github.io/tags/%E5%85%BC%E5%AE%B9/"/>
    
  </entry>
  
  <entry>
    <title>使用apache2反向代理访问google</title>
    <link href="https://lestatmiao.github.io/2017/10/14/%E4%BD%BF%E7%94%A8apache2%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AEgoogle/"/>
    <id>https://lestatmiao.github.io/2017/10/14/使用apache2反向代理访问google/</id>
    <published>2017-10-14T13:56:43.000Z</published>
    <updated>2017-10-15T05:04:39.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css"><script src="https://cdn.bootcss.com/aplayer/1.9.1/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p><strong>引言</strong><br>刚刚在<a href="https://www.v2ex.com/t/397631#reply17" target="_blank" rel="noopener">v2ex</a>上看到一篇用nginx做反向代理访问google的帖子,出于好奇,试了试用apache进行反向代理访问google,果然很好玩!</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作:"></a>准备工作:</h2><ul><li>apache服务器需要安装proxy相关模块,如果是ubuntu环境可以直接使用命令<code>sudo a2enmod 模块名称</code>进行安装,模块可以在<code>/etc/apache2/mods-available/</code>目录下查看,安装好的模块可以在<code>/etc/apache2/mods-enabled/</code><br>里查看<br>这里直接上本人的配置:<pre><code>&lt;VirtualHost *:443&gt;  ServerName facebook.smarthippo.club  SSLEngine on  SSLCertificateFile &quot;/etc/letsencrypt/archive/facebook.smarthippo.club/cert1.pem&quot;  SSLCertificateKeyFile &quot;/etc/letsencrypt/archive/facebook.smarthippo.club/privkey1.pem&quot;  SetEnvIf User-Agent “.*MSIE.*” \  nokeepalive ssl-unclean-shutdown \  downgrade-1.0 force-response-1.0  SSLProxyEngine On  ProxyPass / https://www.facebook.com/  ProxyPassReverse / https://www.facebook.com/&lt;/VirtualHost&gt;&lt;VirtualHost *:443&gt;  ServerName google.smarthippo.club  SSLEngine on  SSLCertificateFile &quot;/etc/letsencrypt/archive/google.smarthippo.club/cert1.pem&quot;  SSLCertificateKeyFile &quot;/etc/letsencrypt/archive/google.smarthippo.club/privkey1.pem&quot;  SetEnvIf User-Agent “.*MSIE.*” \  nokeepalive ssl-unclean-shutdown \  downgrade-1.0 force-response-1.0  SSLProxyEngine On  ProxyPass / https://www.google.com.hk/  ProxyPassReverse / https://www.google.com.hk/&lt;/VirtualHost&gt;</code></pre>So,<a href="https://google.smarthippo.club" target="_blank" rel="noopener">Google</a>,<a href="https://wiki.smarthippo.club" target="_blank" rel="noopener">Wiki</a>,就是这么简单~</li></ul><blockquote><p>备注:<br>这篇文章的前提当然是有一个国外的服务器,安利一波<a href="https://www.vultr.com/" target="_blank" rel="noopener">vultr(价格合理,且稳定,按天计费)</a><br>可以通过添加子域名的方式实现对不同墙外站点的访问,详见第二个配置<br>安装ssl证书<a href="https://www.zhukun.net/archives/8104" target="_blank" rel="noopener">网上</a>太多,就不写了  </p></blockquote><h2 id="目前存在的问题"><a href="#目前存在的问题" class="headerlink" title="目前存在的问题:"></a>目前存在的问题:</h2><ol><li>在反向代理站点中如果有跳转到其他被墙站点的链接,依然无法访问</li><li>部分网站对机器访问的请求有限制,比如google,虽然首页可以正常访问,但其他页面可能会访问不了,跳转到<code>ipv4.google.com</code>进行人机验证  </li></ol><p>正在尝试用apache的负载均衡解决第二个问题…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.0/APlayer.min.css&quot;&gt;&lt;script src=&quot;htt
      
    
    </summary>
    
    
      <category term="翻墙" scheme="https://lestatmiao.github.io/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="反向代理" scheme="https://lestatmiao.github.io/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
</feed>
